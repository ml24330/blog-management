<!DOCTYPE html>
<html>

<head>
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0" />
  <meta property="og:site_name" content="LSELawReview ArticleConverter" />
  <meta property="og:description" content="Utility site to convert between article footnote formats" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <!--<link rel="shortcut icon" href="assets/images/favicon.ico" />
    <link rel="apple-touch-icon" href="assets/images/favicon.png" />
    <link rel="mask-icon" href="assets/images/favicon.png" color="#000000">-->
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="description" content="Utility site to convert between article footnote format">
  <title>LSELawReview ArticleConverter</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", helvetica, Arial, sans-serif;
      min-height: 105vh;
      margin-left: 10px;
      margin-right: 10px;
      padding-left: 10px;
      padding-right: 10px;
    }
    .outline {
      border-style: solid;
      border-color: black;
      border-width: 3px;
      border-radius: 10px;
    }
    h1 {
      font-weight: 800;
      font-size: 30pt;
    }
    .copyright {
      color: grey;
    }
    label {
      font-weight: 600;
      font-size: 18pt;
    }
    textarea {
      font-family: "Times New Roman", Arial, sans-serif;
      font-size: 12pt;
      /* width: 100%; */
      resize: none;
      flex-grow: 1;
      padding: 5px;
    }
    button, select {
      font-size: 20px;
      color: white;
      background-color: green;
      padding: 10px;
      transition-duration: 0.2s;
      text-decoration: none;
      cursor: pointer;
    }
    button:hover {
      background-color: #004c00;
    }
    button.reset {
      background-color: red;
    }
    button.reset:hover {
      background-color: #990000;
    }
    select {
      background-color: purple
    }

    .inline {
      display: inline-block
    }
    .flex {
      display: flex;
      flex-direction: column;
    }
  </style>
</head>

<body class="outline">
  <h1>LSE Law Review Article Converter</h1>

  <div style="height: 85vh;">
    <div class="body flex" style="height: 60%">
      <label for="bodytextbox">Main Article Body:</label>
      <textarea id="bodytextbox" class="outline" placeholder="Type or paste the main article body here, then click the buttons below to convert the footnote format."></textarea>
    </div>
    <br>

    <div class="footnotes flex" style="height: 25%">
      <label for="footnotestextbox">Footnotes:</label>
      <textarea id="footnotestextbox" class="outline" placeholder="Type or paste the article footnotes section here, then click the buttons below to convert the footnote format."></textarea>
    </div>
    <br>

    <div class="buttons" style="height: 10%">
      <label for="formatpicker">Format:</label>
      <select id="formatpicker" class="outline">
        <option value="simple">Simple: [1]</option>
        <option value="ftn">Advanced: [^^[1]^^](#_ftn1)</option>
      </select>
      <br>
      <!-- <label>Buttons</label> -->
      <button type="button" id="convertcopybutton" class="outline">Convert and Copy Entire Article</button>
      <button type="button" id="convertbutton" class="outline">Convert Only</button>
      <button type="reset" id="resetbutton" class="reset outline" style="float: right">Reset</button>
    </div>

    <p class="copyright"><br>Copyright Â© 2021 Julian Schiavo. All rights reserved. <br>Available under the <a style="color:black" href="https://raw.githubusercontent.com/LSELawReview/article-converter/master/LICENSE">MIT License</a>.</p>
  </div>
</body>

<script>
  var hasConverted = false

  let bodyRegexSimple = /\[([^\[]+)\]/g
  let bodyRegexFtn = /\[\^\^\[([^\[]+)\]\^\^\]\(\#\_ftn[^\)]+\)/g

  let footnoteRegexSimple = /\[([^\[]+)\] (.+\n)*/g
  let footnoteRegexFtn = /\[\[([^\[]+)\]\]\(\#\_ftnref[^\)]+\) (.+\n)*/g

  function format() {
    let picker = document.getElementById("formatpicker")
    return picker.value
  }

  function convertArticleBody() {
    if (hasConverted) { return }

    let regex = format() == "simple" ? bodyRegexSimple : bodyRegexFtn
    let bodyTextbox = document.getElementById("bodytextbox")
    bodyTextbox.value = bodyTextbox.value.replace(regex, "<a class=\"inline-reference\" id=\"inline$1\" href=\"#$1\">$1</a>")
  }

  function convertFootnotes() {
    if (hasConverted) { return }

    let regex = format() == "simple" ? footnoteRegexSimple : footnoteRegexFtn
    let footnoteTextbox = document.getElementById("footnotestextbox")
    footnoteTextbox.value = footnoteTextbox.value.replace(regex, "<a class=\"reference\" id=\"$1\" href=\"#inline$1\">[$1]</a>\n$2")
  }

  function lockArticle() {
    let bodyTextbox = document.getElementById("bodytextbox")
    bodyTextbox.setAttribute('readonly', '')
    bodyTextbox.style.color = 'grey'

    let footnoteTextbox = document.getElementById("footnotestextbox")
    footnoteTextbox.setAttribute('readonly', '')
    footnoteTextbox.style.color = 'grey'
  }

  function copyArticleToClipboard() {
    let bodyTextbox = document.getElementById("bodytextbox")
    let footnoteTextbox = document.getElementById("footnotestextbox")
    let text = bodyTextbox.value + footnoteTextbox.value

    let temporaryTextArea = document.createElement('textarea')
    temporaryTextArea.value = text
    temporaryTextArea.style.position = 'absolute'
    temporaryTextArea.style.left = '-99999px'
    temporaryTextArea.setAttribute('readonly', '')
    document.body.appendChild(temporaryTextArea)
    temporaryTextArea.focus()
    temporaryTextArea.select()
    let copied = document.execCommand('copy')
    document.body.removeChild(temporaryTextArea)

    alert(copied ? "Article converted and copied to clipboard successfully." : "The article was converted, but couldn't be copied to the clipboard. Try again or manually copy the article.")
  }

  function convertCopyButtonClicked() {
    lockArticle()
    convertArticleBody()
    convertFootnotes()
    copyArticleToClipboard()
    hasConverted = true
  }

  function convertButtonClicked() {
    lockArticle()
    convertArticleBody()
    convertFootnotes()
    alert("Article converted successfully.")
    hasConverted = true
  }

  function resetButtonClicked() {
    hasConverted = false
    let bodyTextbox = document.getElementById("bodytextbox")
    bodyTextbox.value = ""
    bodyTextbox.style.color = 'black'
    bodyTextbox.removeAttribute('readonly')

    let footnoteTextbox = document.getElementById("footnotestextbox")
    footnoteTextbox.value = ""
    footnoteTextbox.style.color = 'black'
    footnoteTextbox.removeAttribute('readonly')
  }

  document.getElementById("convertcopybutton").onclick = convertCopyButtonClicked
  document.getElementById("convertbutton").onclick = convertButtonClicked
  document.getElementById("resetbutton").onclick = resetButtonClicked
</script>

</html>
