{"version":3,"sources":["pages/AuthorPage.js","assets/images/placeholder.png","config.js","components/Navigation.js","useLocalStorage.js","pages/HomePage.js","pages/PostsPage.js","pages/AddAuthorPage.js","pages/AuthorsPage.js","assets/images/time.svg","components/PreviewComponent.js","pages/AddPostPage.js","pages/PostPage.js","pages/NotFoundPage.js","ScrollToTop.js","pages/VisitorsPage.js","App.js","reportWebVitals.js","index.js","components/Warning.js"],"names":["useStyles","makeStyles","page","padding","input_long","margin","width","button","link","textDecoration","cursor","color","image","AuthorPage","match","history","useLocalStorage","params","id","author","setAuthor","setImage","modified","setModified","useState","status","setStatus","loggedIn","setLoggedIn","classes","useEffect","a","fetch","API_URL","credentials","res","push","json","dat","img","Buffer","from","data","toString","placeholder","exists","v","undefined","handleInput","e","field","prevAuthor","target","value","handleSubmit","name","bio","category","formData","FormData","console","log","size","append","_id","method","body","className","onClick","window","location","reload","handleDelete","confirm","to","localStorage","removeItem","variant","label","onChange","src","onError","onerror","URL","createObjectURL","alt","type","accept","files","WEBSITE_URL","theme","fontSize","menuButton","marginRight","spacing","title","flexGrow","Navigation","useCookies","removeCookie","_removeCookie","position","edge","clear","key","initialValue","item","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","root","card","minHeight","background","bullet","display","transform","pos","marginBottom","foot","bottom","left","HomePage","Typography","component","Box","textAlign","Card","CardContent","React","require","PostsPage","posts","setPosts","columns","headerName","flex","minWidth","valueFormatter","join","date","d","Date","day","getDate","month","getMonth","year","getFullYear","renderDate","sortable","renderCell","style","Button","href","rel","merged","map","post","_author","authors","length","_categories","categories","url","slice","slug","reverse","Warning","autoHeight","sortingOrder","rows","AUTHOR_TEMPLATE","AddAuthorPage","handleClear","TextField","AuthorsPage","setAuthors","withId","_image","charAt","toUpperCase","modal","top","backgroundColor","zIndex","right","PreviewComponent","setIsOpen","isOpen","idx","visits","time","Math","ceil","readingTime","removeMd","content","split","wordsPerMinute","minutes","rehypePlugins","rehypeRaw","POST_TEMPLATE","now","input","icon","textarea","maxHeight","overflow","AddPostPage","setPost","newAuthor","setNewAuthor","newCategory","setNewCategory","prevPost","handleInputForArray","newArray","index","handleAdd","handleRemoveFromArray","splice","_post","headers","post_res","slug_exists","visits_create_res","visits_set_res","toISOString","substr","cat","multiline","scrollTo","PostPage","visits_res","visits_dat","NotFoundPage","setTimeout","withRouter","unlisten","listen","VisitorsPage","visitors","setVisitors","countries","setCountries","entries","setEntries","failed","setFailed","visitorColumns","pw","prompt","entry","locmap","forEach","arr","Object","keys","country","sort","b","entrymap","arr2","App","path","exact","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","div"],"mappings":"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","file":"static/js/main.bc30b31b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport placeholder from '../assets/images/placeholder.png' \nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    image: {\n        width: '30%',\n        margin: '10px 0'\n    }\n})\n\nexport default function AuthorPage({ match, history }) {\n\n    const [author, setAuthor] = useLocalStorage(`author_${match.params.id}`, {})\n    const [image, setImage] = useLocalStorage(`image_${match.params.id}`, '')\n    const [modified, setModified] = useLocalStorage(`modified_${match.params.id}`, false)\n    const [status, setStatus] = useState('')\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if(!modified) {\n            (async () => {\n                const res = await fetch(`${API_URL}/authors/${match.params.id}`, {\n                    credentials: 'include'\n                })\n                if(res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                if(res.status === 404) {\n                    history.push('/404')\n                }\n                const dat = await res.json()\n                setAuthor(dat)\n            })()\n        }\n    }, [match.params.id, modified])\n\n    useEffect(() => {\n        if(!modified) {\n            try {\n                const img = new Buffer.from(author.image.data).toString('base64')\n                setImage(`data:image/png;base64,${img}`)\n            } catch {\n                setImage(placeholder)\n            }\n        }\n    }, [author.image, modified])\n\n    const cleanUp = () => {\n        localStorage.removeItem(`author_${match.params.id}`)\n        localStorage.removeItem(`image_${match.params.id}`)\n        localStorage.removeItem(`modified_${match.params.id}`)\n    }\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setModified(true)\n        setAuthor(prevAuthor => {\n            return {...prevAuthor, [field]: e.target.value}\n        })\n    }\n    \n    const handleClear = () => {\n        setModified(false)\n    }\n\n    const handleSubmit = async () => {\n        if(!author.name || !author.bio || !author.category) {\n            setStatus('Missing fields!')\n            return\n        }\n        const formData = new FormData()\n        console.log(image)\n        if(image.size) {\n            formData.append('image', image)\n        }\n        formData.append('name', author.name)\n        formData.append('bio', author.bio)\n        formData.append('category', author.category)\n        const res = await fetch(`${API_URL}/authors/${author._id}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            body: formData\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 200) {\n            setModified(false)\n            setStatus(<>Author successfully edited. <span className={classes.link} onClick={() => {setModified(false);window.location.reload()}}>Refresh</span> the page to see.</>)\n            \n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    const handleDelete = async () => {\n        const alert = window.confirm(`Are you sure you want to delete the author ${author.name}? This cannot be undone.`)\n        if(alert === false) {\n            return\n        }\n        const res = await fetch(`${API_URL}/authors/${author._id}`, {\n            credentials: 'include',\n            method: 'DELETE'\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 204) {\n            setStatus(<>Author successfully deleted. Go back to all authors <Link className={classes.link} to={`/authors`}>here</Link>.</>)\n            cleanUp()\n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    return (\n        <>\n            <Navigation name={author.name} />\n\n            <div className={classes.page}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all authors\n                    </Button>\n                </Link>\n\n                {exists(author.name) && (<div>\n                    <TextField className={classes.input_long} label=\"Name\" value={author.name} onChange={e => handleInput(e, 'name')} />\n                </div>)}\n\n                {exists(author.bio) && (<div>\n                    <TextField className={classes.input_long} label=\"Bio\" value={author.bio || ''} onChange={e => handleInput(e, 'bio')} />\n                </div>)}\n\n                {exists(author.category) && (<div>\n                    <TextField className={classes.input_long} label=\"Category\" value={author.category || ''} onChange={e => handleInput(e, 'category')} />\n                </div>)}\n\n                {exists(image) && (<div>\n                    <img className={classes.image} src={image} onError={(e)=>{e.target.onerror = null; e.target.src= URL.createObjectURL(image)}} alt=\"avatar\" />\n                    <div>\n                        <input className={classes.input_long} type=\"file\" accept=\".png,.jpg,.jpeg,.gif,.webp,.heif\" onChange={e => {setModified(true); setImage(e.target.files[0])}} />\n                    </div>\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleDelete}>Delete</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleClear}>Reset</Button>\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/placeholder.0a8adf32.png\";","export const API_URL = '/api'\nexport const WEBSITE_URL = 'https://blog.lselawreview.com'","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useCookies } from \"react-cookie\"\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n      fontSize: '1rem',\n      '&:hover': {\n        color: '#CBC3E3'\n     }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nexport default function Navigation({ name }) {\n\n  const [_0, _1, removeCookie] = useCookies(['session-token'])\n  const [_2, _3, _removeCookie] = useCookies(['auth-token'])\n\n\n  const classes = useStyles()\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" className={classes.link}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className={classes.menuButton}\n          >\n            <HomeIcon />\n          </IconButton>\n        </Link>\n        <Typography variant=\"h6\" className={classes.title}>\n          {name}\n        </Typography>\n        <Button color=\"inherit\" onClick={() => {removeCookie('session-token');_removeCookie('auth-token');localStorage.clear();window.location.reload()}}>\n          Log out\n        </Button>\n      </Toolbar>\n    </AppBar>\n  )\n}","import { useState } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    root: {\n      width: '48%',\n      margin: '2%'\n    },\n    card: {\n      minHeight: '150px',\n      '&:hover': {\n        background: '#CBC3E3',\n     }\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    foot: {\n      position: 'absolute',\n      bottom: '10px',\n      left: '10px',\n      textDecoration: 'underline'\n    }\n  })\n\nexport default function HomePage() {\n\n    const classes = useStyles()    \n\n    return (\n        <>\n        <Navigation name={'Home'} />\n        <div className={classes.page}>\n            <Typography component=\"div\">\n            <Box fontSize=\"h3.fontSize\" textAlign=\"center\">\n                Welcome!\n            </Box>\n            </Typography>\n            <Box display=\"flex\">\n                <Link to=\"/posts\" className={classes.root}>\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Blog Posts\n                            </Typography>\n                            <br />\n                            <Typography variant=\"body2\" component=\"p\">\n                                Click here to view and edit all posts published to the LSE Law Review Blog.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Link>\n                <Link to=\"/authors\" className={classes.root}>\n                    <Card className={classes.card} >\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Blog Authors\n                            </Typography>\n                            <br />\n                            <Typography variant=\"body2\" component=\"p\">\n                                Click here to view and edit the details of all contributors and editors of the LSE Law Review Blog.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Link>\n            </Box>\n            <Link to=\"/visitors\"><Typography className={classes.foot} variant=\"body2\" component=\"p\">\n                Visitors\n            </Typography></Link>\n        </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataGrid } from '@material-ui/data-grid'\nimport Navigation from '../components/Navigation'\nimport Button from '@material-ui/core/Button'\nimport Warning from '../components/Warning'\nimport { API_URL, WEBSITE_URL } from '../config'\n\nwindow.React = require('react')\n\nconst renderDate = (date) => {\n    const MONTHS = {0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June', 6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'}\n    const d = new Date(date)\n    const day = d.getDate()\n    const month = MONTHS[d.getMonth()]\n    const year = d.getFullYear()\n    return `${day} ${month} ${year}`\n}\n\nexport default function PostsPage() {\n\n    const [posts, setPosts] = useState([])\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const columns = [\n        {field: 'title', headerName: 'Title', flex: 3, minWidth: 150},\n        {field: '_author', headerName: 'Author', flex: 1.5, minWidth: 150, valueFormatter: (params) => {\n            return params.value.join(' & ')\n        }},\n        {field: '_categories', headerName: 'Categories', flex: 1.4, minWidth: 150},\n        {field: 'date', headerName: 'Date', flex: 1.4, minWidth: 140, valueFormatter: (params) => {\n            return renderDate(new Date(params.value))\n        }},\n        {field: 'content', headerName: 'Content', flex: 3, minWidth: 180},\n        {field: '_id', sortable: false, headerName: '\\n', flex: 0.7, minWidth: 80, renderCell: (params) => (\n            <Link to={`/post/${params.value}`} style={{margin: 'auto'}} ><Button variant=\"contained\" color=\"secondary\" >Edit</Button></Link>\n        )},\n        {field: 'url', sortable: false, headerName: '\\n', flex: 1.5, minWidth: 150, renderCell: (params) => (\n            <a href={params.value} style={{margin: 'auto'}} rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"contained\" color=\"primary\">View on blog</Button></a>\n        )}\n    ]\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetch(`${API_URL}/posts`, {\n                credentials: 'include'\n            })\n            if(res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            const dat = await res.json()\n            const merged = dat.map(post => {\n                let _author\n                if(post.authors.length) {\n                    _author = post.authors\n                } else {\n                    _author = [post.author]\n                }\n                const _categories = post.categories.join(' & ')\n                const url = `${WEBSITE_URL}/${new Date(post.date).getFullYear()}/${('0' + (new Date(post.date).getMonth() + 1)).slice(-2)}/${post.slug}`\n                const id = post._id\n                return {...post, _author, url, id, _categories}\n            })\n            merged.reverse()\n            setPosts(merged)\n        })()\n    }, [])\n\n    return (\n        <>\n            <Navigation name={'All Posts'} />\n            {!loggedIn && <Warning />}\n            <div style={{margin: '20px', textAlign: 'center'}}>\n                <Link to=\"/posts/add\"><Button variant=\"contained\" color=\"secondary\" >Add Post</Button></Link>\n            </div>\n            <DataGrid autoHeight style={{width: '98%', margin: 'auto'}} sortingOrder={['asc', 'desc']}\n                rows={posts}\n                columns={columns} />\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst AUTHOR_TEMPLATE = {\n    name: '',\n    category: '',\n    bio: ''\n}\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    image: {\n        width: '30%',\n        margin: '10px 0'\n    }\n})\n\nexport default function AddAuthorPage() {\n\n    const [author, setAuthor] = useLocalStorage('author', AUTHOR_TEMPLATE)\n    const [image, setImage] = useLocalStorage('image', {})\n    const [status, setStatus] = useState('')\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setAuthor(prevAuthor => {\n            return {...prevAuthor, [field]: e.target.value}\n        })\n    }\n\n    const handleSubmit = async () => {\n        const formData = new FormData()\n        if(!author.name || !author.bio || !author.category) {\n            setStatus('Missing fields!')\n            return\n        }\n        formData.append('image', image)\n        formData.append('name', author.name)\n        formData.append('bio', author.bio)\n        formData.append('category', author.category)\n        const res = await fetch(`${API_URL}/authors`, {\n            method: 'POST',\n            body: formData\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 200) {\n            const { _id } = await res.json()\n            setStatus(<>Author successfully added. Click <Link className={classes.link} to={`/author/${_id}`}>here</Link> to view.</>)\n            handleClear()\n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    const handleClear = () => {\n        setAuthor(AUTHOR_TEMPLATE)\n        setImage({})\n    }\n\n    return (\n        <>\n            <Navigation name={'New Author'} />\n\n            <div className={classes.page}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all authors\n                    </Button>\n                </Link>\n\n                {exists(author.name) && (<div>\n                    <TextField className={classes.input_long} label=\"Name\" value={author.name} onChange={e => handleInput(e, 'name')} />\n                </div>)}\n\n                {exists(author.bio) && (<div>\n                    <TextField className={classes.input_long} label=\"Bio\" value={author.bio} onChange={e => handleInput(e, 'bio')} />\n                </div>)}\n\n                {exists(author.category) && (<div>\n                    <TextField className={classes.input_long} label=\"Category\" value={author.category} onChange={e => handleInput(e, 'category')} />\n                </div>)}\n\n                {exists(image) && (<div>\n                    {image.size && (\n                        <div>\n                            <img className={classes.image} src={URL.createObjectURL(image)} alt=\"avatar \"/>\n                        </div>\n                    )}    \n                    <div>\n                        <input className={classes.input_long} type=\"file\" accept=\".png,.jpg,.jpeg,.gif,.webp,.heif\" onChange={e => setImage(e.target.files[0])} />\n                    </div>\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleClear}>Clear</Button>\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataGrid } from '@material-ui/data-grid'\nimport Navigation from '../components/Navigation'\nimport Button from '@material-ui/core/Button'\nimport Warning from '../components/Warning'\nimport { API_URL, WEBSITE_URL } from '../config'\n\nexport default function AuthorsPage() {\n\n    const [authors, setAuthors] = useState([])\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetch(`${API_URL}/authors`, {\n                credentials: 'include'\n            })\n            if(res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            const dat = await res.json()\n            const withId = dat.map(author => {\n                const id = author._id\n                const url = `${WEBSITE_URL}/author/${author.name}`\n                const _image = author.image ? author.image.data ? 'Yes' : 'No' : 'No'\n                return {...author, id, url, _image}\n            })\n            setAuthors(withId)\n        })()\n    }, [])\n\n    const columns = [\n        {field: 'name', headerName: 'Name', flex: 1.8, minWidth: 150},\n        {field: 'category', headerName: 'Category', flex: 1.4, minWidth: 150, valueFormatter: (params) => params.value.charAt(0).toUpperCase() + params.value.slice(1) },\n        {field: 'bio', headerName: 'Bio', flex: 5, minWidth: 150},\n        {field: '_image', headerName: 'Has avatar?', flex: 1.3, minWidth: 150},\n        {field: '_id', sortable: false, headerName: '\\n', flex: 0.7, minWidth: 80, renderCell: (params) => (\n            <Link style={{margin: 'auto'}} to={`/author/${params.value}`}><Button variant=\"contained\" color=\"secondary\">Edit</Button></Link>\n        )},\n        {field: 'url', sortable: false, headerName: '\\n', flex: 1.5, minWidth: 150, renderCell: (params) => (\n            <a href={params.value} style={{margin: 'auto'}} rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"contained\" color=\"primary\">View on blog</Button></a>\n        )}\n    ]\n\n    return (\n        <>\n            <Navigation name={'All Authors'} />\n            <div style={{margin: '20px', textAlign: 'center'}}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors/add\"><Button variant=\"contained\" color=\"secondary\" >Add Author</Button></Link>\n            </div>\n            <DataGrid autoHeight style={{width: '98%', margin: 'auto'}} sortingOrder={['asc', 'desc']}\n                rows={authors}\n                columns={columns} />\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/time.416a61b0.svg\";","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport rehypeRaw from 'rehype-raw'\nimport removeMd from 'remove-markdown'\nimport readingTime from 'reading-time'\nimport time from '../assets/images/time.svg'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    modal: {\n        position: 'sticky',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        backgroundColor: 'white',\n        padding: '2% 0',\n        minHeight: '100vh',\n        margin: 0,\n        zIndex: 999,\n        textAlign: 'right'\n    },\n    button: {\n        position: 'sticky',\n        top: '15px',\n        right: '20px'\n    }\n})\n\nexport default function PreviewComponent({ setIsOpen, isOpen, post }) {\n\n    const classes = useStyles()\n\n    const renderDate = (date) => {\n        const MONTHS = {0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June', 6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'}\n        const d = new Date(date)\n        const day = d.getDate()\n        const month = MONTHS[d.getMonth()]\n        const year = d.getFullYear()\n        return `${day} ${month} ${year}`\n    }\n    \n    return (\n        <>\n            {isOpen && (\n                <div className={classes.modal}>\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={() => setIsOpen(false)}>Close</Button>\n                    <div className=\"post-container\">\n                        {post.authors.length !== 0 && <span className=\"post-author\">{post.authors.map((author, idx) => (\n                            <span key={author}>\n                                <span>{author}</span>\n                                {idx+1 !== post.authors.length && <span> & </span>}\n                            </span>\n                        ))}</span>}\n                        <span> - </span>\n                        <span>{post.categories.map((category, idx) => (\n                            <span key={category}>\n                            <span>{category}</span>\n                            {idx+1 !== post.categories.length && <span> & </span>}\n                        </span>\n                        ))}</span>\n                        <div className=\"post-title\">{post.title}</div>\n                        <div className=\"post-meta\">\n                            <span className=\"post-date\">{renderDate(post.date)}</span>\n                            <span className=\"post-views\">{post.visits} {post.visits === 1 ? 'view' : 'views'}</span>\n                            <span className=\"post-time\"><img src={time} alt=\"time\" />{Math.ceil(readingTime(removeMd(post.content).split('[1]')[0], { wordsPerMinute: 250 }).minutes)} min read</span>\n                        </div>\n                        <div className=\"page-content\">\n                            <ReactMarkdown rehypePlugins={[rehypeRaw]}>{post.content}</ReactMarkdown>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport PreviewComponent from '../components/PreviewComponent'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport AddIcon from '@material-ui/icons/Add'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst POST_TEMPLATE = {\n    title: '',\n    author: '',\n    authors: [],\n    categories: [],\n    visits: 0,\n    content: '',\n    date: Date.now()\n}\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    input: {\n        margin: '15px 5px',\n        width: 'max(20%,200px)'\n    },\n    icon: {\n        position: 'absolute',\n        width: '40px',\n        transform: 'translate(-40px,33px)',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    textarea: {\n        margin: '5px',\n        width: '100%',\n        maxHeight: '300px',\n        overflow: 'scroll',\n        '&:hover': {\n            maxHeight: 'unset'\n        }\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function AddPostPage() {\n\n    const [post, setPost] = useLocalStorage('post', POST_TEMPLATE)\n    const [newAuthor, setNewAuthor] = useLocalStorage('n-a', '')\n    const [newCategory, setNewCategory] = useLocalStorage('n-c', '')\n    \n    const [status, setStatus] = useState('')\n    const [isOpen, setIsOpen] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setPost(prevPost => {\n            return {...prevPost, [field]: e.target.value}\n        })\n    }\n\n    const handleInputForArray = (e, field, idx) => {\n        setPost(prevPost => {\n            const newArray = prevPost[field].map((item, index) => index === idx ? e.target.value : item)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleAdd = (value, field) => {\n        if(!value) return\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.push(value)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleRemoveFromArray = (idx, field) => {\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.splice(idx, 1)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleClear = () => {\n        setPost(POST_TEMPLATE)\n        setNewAuthor('')\n        setNewCategory('')\n    }\n\n    const handleSubmit = async () => {\n        if(!post.title || !post.date || !post.authors.length || !post.categories.length || !post.content) {\n            setStatus('Missing fields!')\n            return\n        }\n        if(post.visits < 0 || post.visits % 1) {\n            setStatus('The number of visits must be a non-negative integer!')\n            return\n        }\n        let _post\n        if(post.authors.length > 1) {\n            _post = {\n                title: post.title,\n                authors: post.authors,\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        } else {\n            _post = {\n                title: post.title,\n                author: post.authors[0],\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        }\n        const post_res = await fetch(`${API_URL}/posts`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify(_post)\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${post_res.status}`)\n            return\n        }\n        const data = await post_res.json()\n        const slug_exists = await fetch(`${API_URL}/visits/${data.slug}`, {\n            credentials: 'include'\n        })\n        if(slug_exists.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(slug_exists.status !== 200) {\n            const visits_create_res = await fetch(`${API_URL}/visits/${data.slug}`, {\n                credentials: 'include',\n                method: 'POST'\n            })\n            if(visits_create_res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            if(visits_create_res.status !== 200) {\n                setStatus(`An error occurred! API returned with status ${visits_create_res.status}`)\n                return\n            } \n        }\n        const visits_set_res = await fetch(`${API_URL}/visits/${data.slug}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ type: 'set', value: post.visits })\n        })\n        if(visits_set_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(visits_set_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${visits_set_res.status}`)\n            return\n        }\n        setStatus(<>Post successfully added. Click <Link className={classes.link} to={`/post/${data._id}`}>here</Link> to view.</>)\n        handleClear()\n    }\n\n    return (\n        <>\n            <Navigation name={'New Post'} />\n\n            <PreviewComponent setIsOpen={setIsOpen} isOpen={isOpen} post={post} />\n            \n            <div className={classes.page} >\n                {!loggedIn && <Warning />}\n                <Link to=\"/posts\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all posts\n                    </Button>\n                </Link>\n\n                {exists(post.title) && (<div>\n                    <TextField className={classes.input_long} label=\"Title\" value={post.title} onChange={e => handleInput(e, 'title')} />\n                </div>)}\n\n                {exists(post.date) && (<div>\n                    <TextField className={classes.input_long} label=\"Date\" type=\"date\" value={new Date(post.date || 0).toISOString().substr(0,10)} onChange={e => handleInput(e, 'date')} />\n                </div>)}\n\n                {exists(post.categories) && (<div>{post.categories.map((cat, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Category\" value={cat} onChange={e => handleInputForArray(e, 'categories', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'categories')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Category\" value={newCategory} onChange={e => setNewCategory(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon}  onClick={() => {handleAdd(newCategory, 'categories'); setNewCategory('')}} />\n                </div>)}\n\n                {exists(post.authors) && (<div>{post.authors.map((author, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Author\" value={author} onChange={e => handleInputForArray(e, 'authors', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'authors')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Author\" value={newAuthor} onChange={e => setNewAuthor(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon} onClick={() => {handleAdd(newAuthor, 'authors'); setNewAuthor('')}} />\n                </div>)}\n\n                {exists(post.visits) && (<div>\n                    <TextField className={classes.input_long} label=\"Views\" type=\"number\" value={post.visits} onChange={e => handleInput(e, 'visits')} />\n                </div>)}\n\n                {exists(post.content) && (<div>\n                    <TextField className={classes.textarea} multiline={true} label=\"Content\" value={post.content || ''} onChange={e => handleInput(e, 'content')} />\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button}  variant=\"contained\" onClick={() => {setIsOpen(true);window.scrollTo(0,0)}}>Preview</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleClear}>Clear</Button>\n\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport PreviewComponent from '../components/PreviewComponent'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport AddIcon from '@material-ui/icons/Add'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    input: {\n        margin: '15px 5px',\n        width: 'max(20%,200px)'\n    },\n    icon: {\n        position: 'absolute',\n        width: '40px',\n        transform: 'translate(-40px,33px)',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    textarea: {\n        margin: '5px',\n        width: '100%',\n        maxHeight: '300px',\n        overflow: 'scroll',\n        '&:hover': {\n            maxHeight: 'unset'\n        }\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function PostPage({ match, history }) {\n\n    const [post, setPost] = useLocalStorage(`post_${match.params.id}`, {})\n    const [modified, setModified] = useLocalStorage(`modified_${match.params.id}`, false)\n    const [newAuthor, setNewAuthor] = useLocalStorage(`n-a_${match.params.id}`, '')\n    const [newCategory, setNewCategory] = useLocalStorage(`n-c_${match.params.id}`, '')\n    \n    const [status, setStatus] = useState('')\n    const [isOpen, setIsOpen] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if(!modified) {\n            (async () => {\n                const res = await fetch(`${API_URL}/post/id/${match.params.id}`, {\n                    credentials: 'include'\n                })\n                if(res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                if(res.status === 404) {\n                    history.push('/404')\n                }\n                const dat = await res.json()\n                const visits_res = await fetch(`${API_URL}/visits/${dat.slug}`, {\n                    credentials: 'include'\n                })\n                if(visits_res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                const visits_dat = await visits_res.json()\n                if(dat.author) {\n                    dat.authors = [dat.author]\n                }\n                setPost({...dat, visits: visits_dat.visits})\n            })()\n        }\n    }, [match.params.id, modified])\n\n    const cleanUp = () => {\n            localStorage.removeItem(`post_${match.params.id}`)\n            localStorage.removeItem(`modified_${match.params.id}`)\n            localStorage.removeItem(`n-a_${match.params.id}`)\n            localStorage.removeItem(`n-c_${match.params.id}`)\n        }\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setModified(true)\n        setPost(prevPost => {\n            return {...prevPost, [field]: e.target.value}\n        })\n    }\n\n    const handleInputForArray = (e, field, idx) => {\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = prevPost[field].map((item, index) => index === idx ? e.target.value : item)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleAdd = (value, field) => {\n        if(!value) return\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.push(value)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleRemoveFromArray = (idx, field) => {\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.splice(idx, 1)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleReset = () => {\n        setModified(false)\n    }\n\n    const handleSubmit = async () => {\n        if(!post.title || !post.date || !post.authors.length || !post.categories.length || !post.content) {\n            setStatus('Missing fields!')\n            return\n        }\n        if(post.visits < 0 || post.visits % 1) {\n            setStatus('The number of visits must be a non-negative integer!')\n            return\n        }\n        let _post\n        if(post.authors.length > 1) {\n            _post = {\n                title: post.title,\n                authors: post.authors,\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        } else {\n            _post = {\n                title: post.title,\n                author: post.authors[0],\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        }\n        const post_res = await fetch(`${API_URL}/posts/${post._id}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify(_post)\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${post_res.status}`)\n            return\n        }\n        const visits_res = await fetch(`${API_URL}/visits/${post.slug}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ type: 'set', value: post.visits })\n        })\n        if(visits_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(visits_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${visits_res.status}`)\n            return\n        }\n        setStatus(<>Post successfully saved. <span className={classes.link} onClick={() => {setModified(false);window.location.reload()}}>Refresh</span> the page to see.</>)\n    }\n\n    const handleDelete = async () => {\n        const alert = window.confirm(`Are you sure you want to delete the post ${post.title}? This cannot be undone.`)\n        if(alert === false) {\n            return\n        }\n        const post_res = await fetch(`${API_URL}/posts/${post._id}`, {\n            credentials: 'include',\n            method: 'DELETE'\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status === 204) {\n            setStatus(<>Post successfully deleted. Go back to all posts <Link className={classes.link} to={`/posts`}>here</Link>. </>)\n            cleanUp()\n        } else {\n            setStatus(`An error occurred! API returned with status ${post_res.status}.`)\n        }\n    }\n\n    return (\n        <>\n            <Navigation name={post.title} />\n            \n            <PreviewComponent setIsOpen={setIsOpen} isOpen={isOpen} post={post} />\n\n            <div className={classes.page} >\n                {!loggedIn && <Warning />}\n                <Link to=\"/posts\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all posts\n                    </Button>\n                </Link>\n\n                {exists(post.title) && (<div>\n                    <TextField className={classes.input_long} label=\"Title\" value={post.title} onChange={e => handleInput(e, 'title')} />\n                </div>)}\n\n                {exists(post.date) && (<div>\n                    <TextField className={classes.input_long} label=\"Date\" type=\"date\" value={new Date(post.date || 0).toISOString().substr(0,10)} onChange={e => handleInput(e, 'date')} />\n                </div>)}\n\n                {exists(post.categories) && (<div>{post.categories.map((cat, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Category\" value={cat} onChange={e => handleInputForArray(e, 'categories', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'categories')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Category\" value={newCategory} onChange={e => setNewCategory(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon}  onClick={() => {handleAdd(newCategory, 'categories'); setNewCategory('')}} />\n                </div>)}\n\n                {exists(post.authors) && (<div>{post.authors.map((author, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Author\" value={author} onChange={e => handleInputForArray(e, 'authors', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'authors')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Author\" value={newAuthor} onChange={e => setNewAuthor(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon} onClick={() => {handleAdd(newAuthor, 'authors'); setNewAuthor('')}} />\n                </div>)}\n\n                {exists(post.visits) && (<div>\n                    <TextField className={classes.input_long} label=\"Views\" type=\"number\" value={post.visits} onChange={e => handleInput(e, 'visits')} />\n                </div>)}\n\n                {exists(post.content) && (<div>\n                    <TextField className={classes.textarea} multiline={true} label=\"Content\" value={post.content || ''} onChange={e => handleInput(e, 'content')} />\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleDelete}>Delete</Button>\n                <Button className={classes.button}  variant=\"contained\" onClick={() => {setIsOpen(true);window.scrollTo(0,0)}}>Preview</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleReset}>Reset</Button>\n\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react'\nimport Navigation from '../components/Navigation'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function NotFoundPage({ history }) {\n\n    useEffect(() => {\n        setTimeout(() => {\n            history.push('/')\n        }, 1500)\n    }, [history])\n\n    return (\n        <>\n            <Navigation name=\"Error 404\" />\n            <Typography style={{ textAlign: 'center', margin: '20px' }} variant=\"h4\">\n                The page that you were looking for does not exist. Redirecting you to the home page...\n            </Typography>\n        </>\n    )\n}\n","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    });\n    return () => {\n      unlisten()\n    }\n  }, [])\n\n  return (null)\n}\n\nexport default withRouter(ScrollToTop)","import React, { useState, useEffect } from 'react'\nimport Navigation from '../components/Navigation'\nimport { DataGrid } from '@material-ui/data-grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { API_URL } from '../config' \n\nconst useStyles = makeStyles({\n    title: {\n        margin: '20px',\n        textAlign: 'center'\n    }\n})\n\nexport default function VisitorsPage({ history }) {\n\n    const classes = useStyles()\n\n    const [visitors, setVisitors] = useState([])\n    const [countries, setCountries] = useState([])\n    const [entries, setEntries] = useState([])\n    const [failed, setFailed] = useState(false)\n\n    const visitorColumns = [\n        {field: 'time', headerName: 'Time', flex: 5, minWidth: '200px', valueFormatter: (params) => {\n            return new Date(params.value)\n        }},\n        {field: 'location', headerName: 'Country', flex: 2, minWidth: '200px'},\n        {field: 'entry', headerName: 'Entry point', flex: 5, minWidth: '200px'}\n    ]\n\n    const countryColumns = [\n        {field: 'country', headerName: 'Country', flex: 5, minWidth: '200px'},\n        {field: 'value', headerName: 'Value', flex: 2, minWidth: '100px'}\n    ]\n\n    const entryColumns = [\n        {field: 'entry', headerName: 'Entry point', flex: 5, minWidth: '200px'},\n        {field: 'value', headerName: 'Value', flex: 2, minWidth: '100px'}\n    ]\n\n    useEffect(() => {\n        (async () => {\n            const pw = window.prompt('Please enter the access code to view this page!')\n            const res = await fetch(`${API_URL}/visits/visitors?pw=${pw}`, { \n                credentials: 'include'\n             })\n            if(res.status !== 200) {\n                setFailed(true)\n                return\n            }\n            const dat = await res.json()\n            const merged = dat.map(v => {\n                return {...v, id: v._id, entry: v.entry || 'N/A'}\n            })\n            setVisitors(merged)\n            const locmap = {}\n            dat.forEach(v => {\n                locmap[v.location] = locmap[v.location] ? ++locmap[v.location] : 1\n            })\n            const arr = []\n            Object.keys(locmap).forEach((country, idx) => {\n                arr.push({id: idx, country, value: locmap[country]})\n            })\n            setCountries(arr.sort((a, b) => a.value > b.value ? -1 : a.value < b.value ? 1 : 0))\n            const entrymap = {}\n            dat.forEach(v => {\n                if(v.entry && v.entry.split('blog.lselawreview.com').length > 1) {\n                    entrymap[v.entry.slice(29)] = entrymap[v.entry.slice(29)] ? ++entrymap[v.entry.slice(29)] : 1\n                }\n            })\n            const arr2 = []\n            Object.keys(entrymap).forEach((entry, idx) => {\n                arr2.push({id: idx, entry, value: entrymap[entry]})\n            })\n            setEntries(arr2.sort((a, b) => a.value > b.value ? -1 : a.value < b.value ? 1 : 0))\n        })()\n    }, [])\n\n    if(failed) {\n        history.push('/')\n    }\n\n    return (\n        <>\n            <Navigation name=\"Visitors\" />\n            <Typography variant=\"h4\" className={classes.title}>\n                Top countries\n            </Typography>\n            <DataGrid autoHeight style={{width: '98%', margin: '10px auto'}} sortingOrder={['asc', 'desc']}\n                rows={countries}\n                columns={countryColumns} />\n            <Typography variant=\"h4\" className={classes.title}>\n                Top entry points\n            </Typography>\n            <DataGrid autoHeight style={{width: '98%', margin: '10px auto'}} sortingOrder={['asc', 'desc']}\n                rows={entries}\n                columns={entryColumns} />\n            <Typography variant=\"h4\" className={classes.title}>\n                All visitors\n            </Typography>\n            <DataGrid autoHeight style={{width: '98%', margin: '10px auto'}} sortingOrder={['asc', 'desc']}\n                rows={visitors}\n                columns={visitorColumns} />\n        </>\n    )\n}\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport PostsPage from './pages/PostsPage'\nimport AddAuthorPage from './pages/AddAuthorPage'\nimport AuthorsPage from './pages/AuthorsPage'\nimport AddPostPage from './pages/AddPostPage'\nimport PostPage from './pages/PostPage'\nimport AuthorPage from './pages/AuthorPage'\nimport NotFoundPage from './pages/NotFoundPage'\nimport ScrollToTop from './ScrollToTop'\nimport VisitorsPage from './pages/VisitorsPage'\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/posts/add\" exact component={AddPostPage} />\n          <Route path=\"/posts\" exact component={PostsPage} />\n          <Route path=\"/authors/add\" exact component={AddAuthorPage} />\n          <Route path=\"/authors\" exact component={AuthorsPage} />\n          <Route path=\"/post/:id\" exact component={PostPage} />\n          <Route path=\"/author/:id\" exact component={AuthorPage} />\n          <Route path=\"/visitors\" exact component={VisitorsPage} />\n          <Route path=\"/\" component={NotFoundPage} />\n        </Switch> \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './main.css'\nimport './override.css'\nimport { CookiesProvider } from \"react-cookie\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useEffect } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    div: {\n        textAlign: 'center',\n        margin: '15px 0 15px 0'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function Warning() {\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n    }, [])\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.div}>\n            <Typography variant=\"h5\">\n                WARNING: You are not logged in! Click <span onClick={() => {window.location.reload()}} className={classes.link}>here</span> to log in again.\n            </Typography>\n        </div>\n    )\n}\n"],"sourceRoot":""}