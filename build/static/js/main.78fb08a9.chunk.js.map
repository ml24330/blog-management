{"version":3,"sources":["pages/AuthorPage.js","assets/images/placeholder.png","config.js","components/Navigation.js","useLocalStorage.js","pages/HomePage.js","pages/PostsPage.js","pages/AddAuthorPage.js","pages/AuthorsPage.js","assets/images/time.svg","components/PreviewComponent.js","pages/AddPostPage.js","pages/PostPage.js","pages/NotFoundPage.js","ScrollToTop.js","App.js","reportWebVitals.js","index.js","components/Warning.js"],"names":["useStyles","makeStyles","page","padding","input_long","margin","width","button","link","textDecoration","cursor","color","image","AuthorPage","match","history","useLocalStorage","params","id","author","setAuthor","setImage","modified","setModified","useState","status","setStatus","loggedIn","setLoggedIn","classes","useEffect","a","fetch","API_URL","credentials","res","push","json","dat","img","Buffer","from","data","toString","placeholder","cleanUp","localStorage","removeItem","exists","v","undefined","handleInput","e","field","prevAuthor","target","value","handleSubmit","name","bio","category","formData","FormData","console","log","size","append","_id","method","body","className","onClick","window","location","reload","handleDelete","confirm","to","variant","label","onChange","src","onError","onerror","URL","createObjectURL","alt","type","accept","files","WEBSITE_URL","theme","fontSize","menuButton","marginRight","spacing","title","flexGrow","Navigation","useCookies","removeCookie","position","edge","key","initialValue","item","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","root","card","minHeight","background","bullet","display","transform","pos","marginBottom","HomePage","Typography","component","Box","textAlign","Card","CardContent","React","require","PostsPage","posts","setPosts","columns","headerName","flex","minWidth","valueFormatter","join","date","d","Date","day","getDate","month","getMonth","year","getFullYear","renderDate","sortable","renderCell","style","Button","href","rel","merged","map","post","_author","authors","length","_categories","categories","url","slice","slug","reverse","Warning","autoHeight","sortingOrder","rows","AUTHOR_TEMPLATE","AddAuthorPage","handleClear","TextField","AuthorsPage","setAuthors","withId","_image","charAt","toUpperCase","modal","top","left","backgroundColor","zIndex","right","PreviewComponent","setIsOpen","isOpen","idx","visits","time","Math","ceil","readingTime","removeMd","content","split","wordsPerMinute","minutes","rehypePlugins","rehypeRaw","POST_TEMPLATE","now","input","icon","textarea","maxHeight","overflow","AddPostPage","setPost","newAuthor","setNewAuthor","newCategory","setNewCategory","prevPost","handleInputForArray","newArray","index","handleAdd","handleRemoveFromArray","splice","_post","headers","post_res","slug_exists","visits_create_res","visits_set_res","toISOString","substr","cat","multiline","scrollTo","PostPage","visits_res","visits_dat","NotFoundPage","setTimeout","withRouter","unlisten","listen","App","path","exact","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","div"],"mappings":"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","file":"static/js/main.78fb08a9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport placeholder from '../assets/images/placeholder.png' \nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    image: {\n        width: '30%',\n        margin: '10px 0'\n    }\n})\n\nexport default function AuthorPage({ match, history }) {\n\n    const [author, setAuthor] = useLocalStorage(`author_${match.params.id}`, {})\n    const [image, setImage] = useLocalStorage(`image_${match.params.id}`, '')\n    const [modified, setModified] = useLocalStorage(`modified_${match.params.id}`, false)\n    const [status, setStatus] = useState('')\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if(!modified) {\n            (async () => {\n                const res = await fetch(`${API_URL}/authors/${match.params.id}`, {\n                    credentials: 'include'\n                })\n                if(res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                if(res.status === 404) {\n                    history.push('/404')\n                }\n                const dat = await res.json()\n                setAuthor(dat)\n            })()\n        }\n    }, [match.params.id, modified])\n\n    useEffect(() => {\n        if(!modified) {\n            try {\n                const img = new Buffer.from(author.image.data).toString('base64')\n                setImage(`data:image/png;base64,${img}`)\n            } catch {\n                setImage(placeholder)\n            }\n        }\n    }, [author.image, modified])\n\n    const cleanUp = () => {\n        localStorage.removeItem(`author_${match.params.id}`)\n        localStorage.removeItem(`image_${match.params.id}`)\n        localStorage.removeItem(`modified_${match.params.id}`)\n    }\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setModified(true)\n        setAuthor(prevAuthor => {\n            return {...prevAuthor, [field]: e.target.value}\n        })\n    }\n    \n    const handleClear = () => {\n        setModified(false)\n    }\n\n    const handleSubmit = async () => {\n        if(!author.name || !author.bio || !author.category) {\n            setStatus('Missing fields!')\n            return\n        }\n        const formData = new FormData()\n        console.log(image)\n        if(image.size) {\n            formData.append('image', image)\n        }\n        formData.append('name', author.name)\n        formData.append('bio', author.bio)\n        formData.append('category', author.category)\n        const res = await fetch(`${API_URL}/authors/${author._id}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            body: formData\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 200) {\n            setStatus(<>Author successfully edited. <span className={classes.link} onClick={() => window.location.reload()}>Refresh</span> the page to see.</>)\n            \n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    const handleDelete = async () => {\n        const alert = window.confirm(`Are you sure you want to delete the author ${author.name}? This cannot be undone.`)\n        if(alert === false) {\n            return\n        }\n        const res = await fetch(`${API_URL}/authors/${author._id}`, {\n            credentials: 'include',\n            method: 'DELETE'\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 204) {\n            setStatus(<>Author successfully deleted. Go back to all authors <Link className={classes.link} to={`/authors`}>here</Link>.</>)\n            cleanUp()\n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    return (\n        <>\n            <Navigation name={author.name} />\n\n            <div className={classes.page}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors\">\n                    <Button variant=\"outlined\" color=\"primary\" onClick={cleanUp}>\n                        Back to all authors\n                    </Button>\n                </Link>\n\n                {exists(author.name) && (<div>\n                    <TextField className={classes.input_long} label=\"Name\" value={author.name} onChange={e => handleInput(e, 'name')} />\n                </div>)}\n\n                {exists(author.bio) && (<div>\n                    <TextField className={classes.input_long} label=\"Bio\" value={author.bio || ''} onChange={e => handleInput(e, 'bio')} />\n                </div>)}\n\n                {exists(author.category) && (<div>\n                    <TextField className={classes.input_long} label=\"Category\" value={author.category || ''} onChange={e => handleInput(e, 'category')} />\n                </div>)}\n\n                {exists(image) && (<div>\n                    <img className={classes.image} src={image} onError={(e)=>{e.target.onerror = null; e.target.src= URL.createObjectURL(image)}} alt=\"avatar\" />\n                    <div>\n                        <input className={classes.input_long} type=\"file\" accept=\".png,.jpg,.jpeg,.gif,.webp,.heif\" onChange={e => {setModified(true); setImage(e.target.files[0])}} />\n                    </div>\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleDelete}>Delete</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleClear}>Reset</Button>\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/placeholder.0a8adf32.png\";","export const API_URL = '/api'\nexport const WEBSITE_URL = 'https://lselr-blog.herokuapp.com'","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useCookies } from \"react-cookie\"\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n      fontSize: '1rem',\n      '&:hover': {\n        color: '#CBC3E3'\n     }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nexport default function Navigation({ name }) {\n\n  const [_0, _1, removeCookie] = useCookies([\"user\"])\n\n  const classes = useStyles()\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" className={classes.link}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className={classes.menuButton}\n          >\n            <HomeIcon />\n          </IconButton>\n        </Link>\n        <Typography variant=\"h6\" className={classes.title}>\n          {name}\n        </Typography>\n        <Button color=\"inherit\" onClick={() => {removeCookie('session-token');window.location.reload()}}>\n          Log out\n        </Button>\n      </Toolbar>\n    </AppBar>\n  )\n}","import { useState } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Navigation from '../components/Navigation'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    root: {\n      width: '48%',\n      margin: '2%'\n    },\n    card: {\n      minHeight: '150px',\n      '&:hover': {\n        background: '#CBC3E3',\n     }\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  })\n\nexport default function HomePage() {\n\n    const classes = useStyles()    \n\n    return (\n        <>\n        <Navigation name={'Home'} />\n        <div className={classes.page}>\n            <Typography component=\"div\">\n            <Box fontSize=\"h3.fontSize\" textAlign=\"center\">\n                Welcome!\n            </Box>\n            </Typography>\n            <Box display=\"flex\">\n                <Link to=\"/posts\" className={classes.root}>\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Blog Posts\n                            </Typography>\n                            <br />\n                            <Typography variant=\"body2\" component=\"p\">\n                                Click here to view and edit all posts published to the LSE Law Review Blog.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Link>\n                <Link to=\"/authors\" className={classes.root}>\n                    <Card className={classes.card} >\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Blog Authors\n                            </Typography>\n                            <br />\n                            <Typography variant=\"body2\" component=\"p\">\n                                Click here to view and edit the details of all contributors and editors of the LSE Law Review Blog.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Link>\n            </Box>\n        </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataGrid } from '@material-ui/data-grid'\nimport Navigation from '../components/Navigation'\nimport Button from '@material-ui/core/Button'\nimport Warning from '../components/Warning'\nimport { API_URL, WEBSITE_URL } from '../config'\n\nwindow.React = require('react')\n\nconst renderDate = (date) => {\n    const MONTHS = {0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June', 6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'}\n    const d = new Date(date)\n    const day = d.getDate()\n    const month = MONTHS[d.getMonth()]\n    const year = d.getFullYear()\n    return `${day} ${month} ${year}`\n}\n\nexport default function PostsPage() {\n\n    const [posts, setPosts] = useState([])\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const columns = [\n        {field: 'title', headerName: 'Title', flex: 3, minWidth: 150},\n        {field: '_author', headerName: 'Author', flex: 1.5, minWidth: 150, valueFormatter: (params) => {\n            return params.value.join(' & ')\n        }},\n        {field: '_categories', headerName: 'Categories', flex: 1.4, minWidth: 150},\n        {field: 'date', headerName: 'Date', flex: 1.4, minWidth: 140, valueFormatter: (params) => {\n            return renderDate(new Date(params.value))\n        }},\n        {field: 'content', headerName: 'Content', flex: 3, minWidth: 180},\n        {field: '_id', sortable: false, headerName: '\\n', flex: 0.7, minWidth: 80, renderCell: (params) => (\n            <Link to={`/post/${params.value}`} style={{margin: 'auto'}} ><Button variant=\"contained\" color=\"secondary\" >Edit</Button></Link>\n        )},\n        {field: 'url', sortable: false, headerName: '\\n', flex: 1.5, minWidth: 150, renderCell: (params) => (\n            <a href={params.value} style={{margin: 'auto'}} rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"contained\" color=\"primary\">View on blog</Button></a>\n        )}\n    ]\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetch(`${API_URL}/posts`, {\n                credentials: 'include'\n            })\n            if(res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            const dat = await res.json()\n            const merged = dat.map(post => {\n                let _author\n                if(post.authors.length) {\n                    _author = post.authors\n                } else {\n                    _author = [post.author]\n                }\n                const _categories = post.categories.join(' & ')\n                const url = `${WEBSITE_URL}/${new Date(post.date).getFullYear()}/${('0' + (new Date(post.date).getMonth() + 1)).slice(-2)}/${post.slug}`\n                const id = post._id\n                return {...post, _author, url, id, _categories}\n            })\n            merged.reverse()\n            setPosts(merged)\n        })()\n    }, [])\n\n    return (\n        <>\n            <Navigation name={'All Posts'} />\n            {!loggedIn && <Warning />}\n            <div style={{margin: '20px', textAlign: 'center'}}>\n                <Link to=\"/posts/add\"><Button variant=\"contained\" color=\"secondary\" >Add Post</Button></Link>\n            </div>\n            <DataGrid autoHeight style={{width: '98%', margin: 'auto'}} sortingOrder={['asc', 'desc']}\n                rows={posts}\n                columns={columns} />\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst AUTHOR_TEMPLATE = {\n    name: '',\n    category: '',\n    bio: ''\n}\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    image: {\n        width: '30%',\n        margin: '10px 0'\n    }\n})\n\nexport default function AddAuthorPage() {\n\n    const [author, setAuthor] = useLocalStorage('author', AUTHOR_TEMPLATE)\n    const [image, setImage] = useLocalStorage('image', {})\n    const [status, setStatus] = useState('')\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setAuthor(prevAuthor => {\n            return {...prevAuthor, [field]: e.target.value}\n        })\n    }\n\n    const handleSubmit = async () => {\n        const formData = new FormData()\n        if(!author.name || !author.bio || !author.category) {\n            setStatus('Missing fields!')\n            return\n        }\n        formData.append('image', image)\n        formData.append('name', author.name)\n        formData.append('bio', author.bio)\n        formData.append('category', author.category)\n        const res = await fetch(`${API_URL}/authors`, {\n            method: 'POST',\n            body: formData\n        })\n        if(res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(res.status === 200) {\n            const { _id } = await res.json()\n            setStatus(<>Author successfully added. Click <Link className={classes.link} to={`/author/${_id}`}>here</Link> to view.</>)\n            handleClear()\n        } else {\n            setStatus(`An error occurred! API returned with status ${res.status}.`)\n        }\n    }\n\n    const handleClear = () => {\n        setAuthor(AUTHOR_TEMPLATE)\n        setImage({})\n    }\n\n    return (\n        <>\n            <Navigation name={'New Author'} />\n\n            <div className={classes.page}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all authors\n                    </Button>\n                </Link>\n\n                {exists(author.name) && (<div>\n                    <TextField className={classes.input_long} label=\"Name\" value={author.name} onChange={e => handleInput(e, 'name')} />\n                </div>)}\n\n                {exists(author.bio) && (<div>\n                    <TextField className={classes.input_long} label=\"Bio\" value={author.bio} onChange={e => handleInput(e, 'bio')} />\n                </div>)}\n\n                {exists(author.category) && (<div>\n                    <TextField className={classes.input_long} label=\"Category\" value={author.category} onChange={e => handleInput(e, 'category')} />\n                </div>)}\n\n                {exists(image) && (<div>\n                    {image.size && (\n                        <div>\n                            <img className={classes.image} src={URL.createObjectURL(image)} alt=\"avatar \"/>\n                        </div>\n                    )}    \n                    <div>\n                        <input className={classes.input_long} type=\"file\" accept=\".png,.jpg,.jpeg,.gif,.webp,.heif\" onChange={e => setImage(e.target.files[0])} />\n                    </div>\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={handleClear}>Clear</Button>\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataGrid } from '@material-ui/data-grid'\nimport Navigation from '../components/Navigation'\nimport Button from '@material-ui/core/Button'\nimport Warning from '../components/Warning'\nimport { API_URL, WEBSITE_URL } from '../config'\n\nexport default function AuthorsPage() {\n\n    const [authors, setAuthors] = useState([])\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    useEffect(() => {\n        (async () => {\n            const res = await fetch(`${API_URL}/authors`, {\n                credentials: 'include'\n            })\n            if(res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            const dat = await res.json()\n            const withId = dat.map(author => {\n                const id = author._id\n                const url = `${WEBSITE_URL}/author/${author.name}`\n                const _image = author.image ? author.image.data ? 'Yes' : 'No' : 'No'\n                return {...author, id, url, _image}\n            })\n            setAuthors(withId)\n        })()\n    }, [])\n\n    const columns = [\n        {field: 'name', headerName: 'Name', flex: 1.8, minWidth: 150},\n        {field: 'category', headerName: 'Category', flex: 1.4, minWidth: 150, valueFormatter: (params) => params.value.charAt(0).toUpperCase() + params.value.slice(1) },\n        {field: 'bio', headerName: 'Bio', flex: 5, minWidth: 150},\n        {field: '_image', headerName: 'Has avatar?', flex: 1.3, minWidth: 150},\n        {field: '_id', sortable: false, headerName: '\\n', flex: 0.7, minWidth: 80, renderCell: (params) => (\n            <Link style={{margin: 'auto'}} to={`/author/${params.value}`}><Button variant=\"contained\" color=\"secondary\">Edit</Button></Link>\n        )},\n        {field: 'url', sortable: false, headerName: '\\n', flex: 1.5, minWidth: 150, renderCell: (params) => (\n            <a href={params.value} style={{margin: 'auto'}} rel=\"noopener noreferrer\" target=\"_blank\"><Button variant=\"contained\" color=\"primary\">View on blog</Button></a>\n        )}\n    ]\n\n    return (\n        <>\n            <Navigation name={'All Authors'} />\n            <div style={{margin: '20px', textAlign: 'center'}}>\n                {!loggedIn && <Warning />}\n                <Link to=\"/authors/add\"><Button variant=\"contained\" color=\"secondary\" >Add Author</Button></Link>\n            </div>\n            <DataGrid autoHeight style={{width: '98%', margin: 'auto'}} sortingOrder={['asc', 'desc']}\n                rows={authors}\n                columns={columns} />\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/time.416a61b0.svg\";","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport rehypeRaw from 'rehype-raw'\nimport removeMd from 'remove-markdown'\nimport readingTime from 'reading-time'\nimport time from '../assets/images/time.svg'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    modal: {\n        position: 'sticky',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        backgroundColor: 'white',\n        padding: '2% 0',\n        minHeight: '100vh',\n        margin: 0,\n        zIndex: 999,\n        textAlign: 'right'\n    },\n    button: {\n        position: 'sticky',\n        top: '15px',\n        right: '20px'\n    }\n})\n\nexport default function PreviewComponent({ setIsOpen, isOpen, post }) {\n\n    const classes = useStyles()\n\n    const renderDate = (date) => {\n        const MONTHS = {0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June', 6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'}\n        const d = new Date(date)\n        const day = d.getDate()\n        const month = MONTHS[d.getMonth()]\n        const year = d.getFullYear()\n        return `${day} ${month} ${year}`\n    }\n    \n    return (\n        <>\n            {isOpen && (\n                <div className={classes.modal}>\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={() => setIsOpen(false)}>Close</Button>\n                    <div className=\"post-container\">\n                        {post.authors.length !== 0 && <span className=\"post-author\">{post.authors.map((author, idx) => (\n                            <span key={author}>\n                                <span>{author}</span>\n                                {idx+1 !== post.authors.length && <span> & </span>}\n                            </span>\n                        ))}</span>}\n                        <span> - </span>\n                        <span>{post.categories.map((category, idx) => (\n                            <span key={category}>\n                            <span>{category}</span>\n                            {idx+1 !== post.categories.length && <span> & </span>}\n                        </span>\n                        ))}</span>\n                        <div className=\"post-title\">{post.title}</div>\n                        <div className=\"post-meta\">\n                            <span className=\"post-date\">{renderDate(post.date)}</span>\n                            <span className=\"post-views\">{post.visits} {post.visits === 1 ? 'view' : 'views'}</span>\n                            <span className=\"post-time\"><img src={time} alt=\"time\" />{Math.ceil(readingTime(removeMd(post.content).split('[1]')[0], { wordsPerMinute: 250 }).minutes)} min read</span>\n                        </div>\n                        <div className=\"page-content\">\n                            <ReactMarkdown rehypePlugins={[rehypeRaw]}>{post.content}</ReactMarkdown>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport PreviewComponent from '../components/PreviewComponent'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport AddIcon from '@material-ui/icons/Add'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst POST_TEMPLATE = {\n    title: '',\n    author: '',\n    authors: [],\n    categories: [],\n    visits: 0,\n    content: '',\n    date: Date.now()\n}\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    input: {\n        margin: '15px 5px',\n        width: 'max(20%,200px)'\n    },\n    icon: {\n        position: 'absolute',\n        width: '40px',\n        transform: 'translate(-40px,33px)',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    textarea: {\n        margin: '5px',\n        width: '100%',\n        maxHeight: '300px',\n        overflow: 'scroll',\n        '&:hover': {\n            maxHeight: 'unset'\n        }\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function AddPostPage() {\n\n    const [post, setPost] = useLocalStorage('post', POST_TEMPLATE)\n    const [newAuthor, setNewAuthor] = useLocalStorage('n-a', '')\n    const [newCategory, setNewCategory] = useLocalStorage('n-c', '')\n    \n    const [status, setStatus] = useState('')\n    const [isOpen, setIsOpen] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setPost(prevPost => {\n            return {...prevPost, [field]: e.target.value}\n        })\n    }\n\n    const handleInputForArray = (e, field, idx) => {\n        setPost(prevPost => {\n            const newArray = prevPost[field].map((item, index) => index === idx ? e.target.value : item)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleAdd = (value, field) => {\n        if(!value) return\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.push(value)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleRemoveFromArray = (idx, field) => {\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.splice(idx, 1)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleClear = () => {\n        setPost(POST_TEMPLATE)\n        setNewAuthor('')\n        setNewCategory('')\n    }\n\n    const handleSubmit = async () => {\n        if(!post.title || !post.date || !post.authors.length || !post.categories.length || !post.content) {\n            setStatus('Missing fields!')\n            return\n        }\n        if(post.visits < 0 || post.visits % 1) {\n            setStatus('The number of visits must be a non-negative integer!')\n            return\n        }\n        let _post\n        if(post.authors.length > 1) {\n            _post = {\n                title: post.title,\n                authors: post.authors,\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        } else {\n            _post = {\n                title: post.title,\n                author: post.authors[0],\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        }\n        const post_res = await fetch(`${API_URL}/posts`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify(_post)\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${post_res.status}`)\n            return\n        }\n        const data = await post_res.json()\n        const slug_exists = await fetch(`${API_URL}/visits/${data.slug}`, {\n            credentials: 'include'\n        })\n        if(slug_exists.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(slug_exists.status !== 200) {\n            const visits_create_res = await fetch(`${API_URL}/visits/${data.slug}`, {\n                credentials: 'include',\n                method: 'POST'\n            })\n            if(visits_create_res.status === 401) {\n                setLoggedIn(false)\n                return\n            }\n            if(visits_create_res.status !== 200) {\n                setStatus(`An error occurred! API returned with status ${visits_create_res.status}`)\n                return\n            } \n        }\n        const visits_set_res = await fetch(`${API_URL}/visits/${data.slug}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ type: 'set', value: post.visits })\n        })\n        if(visits_set_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(visits_set_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${visits_set_res.status}`)\n            return\n        }\n        setStatus(<>Post successfully added. Click <Link className={classes.link} to={`/post/${data._id}`}>here</Link> to view.</>)\n        handleClear()\n    }\n\n    return (\n        <>\n            <Navigation name={'New Post'} />\n\n            <PreviewComponent setIsOpen={setIsOpen} isOpen={isOpen} post={post} />\n            \n            <div className={classes.page} >\n                {!loggedIn && <Warning />}\n                <Link to=\"/posts\">\n                    <Button variant=\"outlined\" color=\"primary\">\n                        Back to all posts\n                    </Button>\n                </Link>\n\n                {exists(post.title) && (<div>\n                    <TextField className={classes.input_long} label=\"Title\" value={post.title} onChange={e => handleInput(e, 'title')} />\n                </div>)}\n\n                {exists(post.date) && (<div>\n                    <TextField className={classes.input_long} label=\"Date\" type=\"date\" value={new Date(post.date || 0).toISOString().substr(0,10)} onChange={e => handleInput(e, 'date')} />\n                </div>)}\n\n                {exists(post.categories) && (<div>{post.categories.map((cat, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Category\" value={cat} onChange={e => handleInputForArray(e, 'categories', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'categories')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Category\" value={newCategory} onChange={e => setNewCategory(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon}  onClick={() => {handleAdd(newCategory, 'categories'); setNewCategory('')}} />\n                </div>)}\n\n                {exists(post.authors) && (<div>{post.authors.map((author, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Author\" value={author} onChange={e => handleInputForArray(e, 'authors', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'authors')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Author\" value={newAuthor} onChange={e => setNewAuthor(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon} onClick={() => {handleAdd(newAuthor, 'authors'); setNewAuthor('')}} />\n                </div>)}\n\n                {exists(post.visits) && (<div>\n                    <TextField className={classes.input_long} label=\"Views\" type=\"number\" value={post.visits} onChange={e => handleInput(e, 'visits')} />\n                </div>)}\n\n                {exists(post.content) && (<div>\n                    <TextField className={classes.textarea} multiline={true} label=\"Content\" value={post.content || ''} onChange={e => handleInput(e, 'content')} />\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button}  variant=\"contained\" onClick={() => {setIsOpen(true);window.scrollTo(0,0)}}>Preview</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleClear}>Clear</Button>\n\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport useLocalStorage from '../useLocalStorage'\nimport PreviewComponent from '../components/PreviewComponent'\nimport Navigation from '../components/Navigation'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport AddIcon from '@material-ui/icons/Add'\nimport Warning from '../components/Warning'\nimport { API_URL } from '../config'\n\nconst useStyles = makeStyles({\n    page: {\n        padding: '2% 10%'\n    },\n    input_long: {\n        margin: '15px 5px',\n        width: '100%'\n    },\n    input: {\n        margin: '15px 5px',\n        width: 'max(20%,200px)'\n    },\n    icon: {\n        position: 'absolute',\n        width: '40px',\n        transform: 'translate(-40px,33px)',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    },\n    button: {\n        margin: '20px 10px',\n        width: '10%'\n    },\n    textarea: {\n        margin: '5px',\n        width: '100%',\n        maxHeight: '300px',\n        overflow: 'scroll',\n        '&:hover': {\n            maxHeight: 'unset'\n        }\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function PostPage({ match, history }) {\n\n    const [post, setPost] = useLocalStorage(`post_${match.params.id}`, {})\n    const [modified, setModified] = useLocalStorage(`modified_${match.params.id}`, false)\n    const [newAuthor, setNewAuthor] = useLocalStorage(`n-a_${match.params.id}`, '')\n    const [newCategory, setNewCategory] = useLocalStorage(`n-c_${match.params.id}`, '')\n    \n    const [status, setStatus] = useState('')\n    const [isOpen, setIsOpen] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if(!modified) {\n            (async () => {\n                const res = await fetch(`${API_URL}/post/id/${match.params.id}`, {\n                    credentials: 'include'\n                })\n                if(res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                if(res.status === 404) {\n                    history.push('/404')\n                }\n                const dat = await res.json()\n                const visits_res = await fetch(`${API_URL}/visits/${dat.slug}`, {\n                    credentials: 'include'\n                })\n                if(visits_res.status === 401) {\n                    setLoggedIn(false)\n                    return\n                }\n                const visits_dat = await visits_res.json()\n                if(dat.author) {\n                    dat.authors = [dat.author]\n                }\n                setPost({...dat, visits: visits_dat.visits})\n            })()\n        }\n    }, [match.params.id, modified])\n\n    const cleanUp = () => {\n            localStorage.removeItem(`post_${match.params.id}`)\n            localStorage.removeItem(`modified_${match.params.id}`)\n            localStorage.removeItem(`n-a_${match.params.id}`)\n            localStorage.removeItem(`n-c_${match.params.id}`)\n        }\n\n    const exists = (v) => {\n        return v !== undefined\n    }\n\n    const handleInput = (e, field) => {\n        setModified(true)\n        setPost(prevPost => {\n            return {...prevPost, [field]: e.target.value}\n        })\n    }\n\n    const handleInputForArray = (e, field, idx) => {\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = prevPost[field].map((item, index) => index === idx ? e.target.value : item)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleAdd = (value, field) => {\n        if(!value) return\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.push(value)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleRemoveFromArray = (idx, field) => {\n        setModified(true)\n        setPost(prevPost => {\n            const newArray = [...prevPost[field]]\n            newArray.splice(idx, 1)\n            return {...prevPost, [field]: newArray}\n        })\n    }\n\n    const handleReset = () => {\n        setModified(false)\n    }\n\n    const handleSubmit = async () => {\n        if(!post.title || !post.date || !post.authors.length || !post.categories.length || !post.content) {\n            setStatus('Missing fields!')\n            return\n        }\n        if(post.visits < 0 || post.visits % 1) {\n            setStatus('The number of visits must be a non-negative integer!')\n            return\n        }\n        let _post\n        if(post.authors.length > 1) {\n            _post = {\n                title: post.title,\n                authors: post.authors,\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        } else {\n            _post = {\n                title: post.title,\n                author: post.authors[0],\n                categories: post.categories,\n                date: post.date,\n                content: post.content\n            }\n        }\n        const post_res = await fetch(`${API_URL}/posts/${post._id}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify(_post)\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${post_res.status}`)\n            return\n        }\n        const visits_res = await fetch(`${API_URL}/visits/${post.slug}`, {\n            credentials: 'include',\n            method: 'PATCH',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ type: 'set', value: post.visits })\n        })\n        if(visits_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(visits_res.status !== 200) {\n            setStatus(`An error occurred! API returned with status ${visits_res.status}`)\n            return\n        }\n        setStatus(<>Post successfully saved. <span className={classes.link} onClick={() => window.location.reload()}>Refresh</span> the page to see.</>)\n    }\n\n    const handleDelete = async () => {\n        const alert = window.confirm(`Are you sure you want to delete the post ${post.title}? This cannot be undone.`)\n        if(alert === false) {\n            return\n        }\n        const post_res = await fetch(`${API_URL}/posts/${post._id}`, {\n            credentials: 'include',\n            method: 'DELETE'\n        })\n        if(post_res.status === 401) {\n            setLoggedIn(false)\n            return\n        }\n        if(post_res.status === 204) {\n            setStatus(<>Post successfully deleted. Go back to all posts <Link className={classes.link} to={`/posts`}>here</Link>. </>)\n            cleanUp()\n        } else {\n            setStatus(`An error occurred! API returned with status ${post_res.status}.`)\n        }\n    }\n\n    return (\n        <>\n            <Navigation name={post.title} />\n            \n            <PreviewComponent setIsOpen={setIsOpen} isOpen={isOpen} post={post} />\n\n            <div className={classes.page} >\n                {!loggedIn && <Warning />}\n                <Link to=\"/posts\">\n                    <Button variant=\"outlined\" color=\"primary\" onClick={cleanUp}>\n                        Back to all posts\n                    </Button>\n                </Link>\n\n                {exists(post.title) && (<div>\n                    <TextField className={classes.input_long} label=\"Title\" value={post.title} onChange={e => handleInput(e, 'title')} />\n                </div>)}\n\n                {exists(post.date) && (<div>\n                    <TextField className={classes.input_long} label=\"Date\" type=\"date\" value={new Date(post.date || 0).toISOString().substr(0,10)} onChange={e => handleInput(e, 'date')} />\n                </div>)}\n\n                {exists(post.categories) && (<div>{post.categories.map((cat, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Category\" value={cat} onChange={e => handleInputForArray(e, 'categories', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'categories')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Category\" value={newCategory} onChange={e => setNewCategory(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon}  onClick={() => {handleAdd(newCategory, 'categories'); setNewCategory('')}} />\n                </div>)}\n\n                {exists(post.authors) && (<div>{post.authors.map((author, idx) => (\n                    <span key={idx} ><TextField className={classes.input} label=\"Author\" value={author} onChange={e => handleInputForArray(e, 'authors', idx)} /><CancelOutlinedIcon style={{color: 'darkred'}} className={classes.icon} onClick={() => handleRemoveFromArray(idx, 'authors')} /></span>\n                ))}\n                    <TextField className={classes.input} label=\"New Author\" value={newAuthor} onChange={e => setNewAuthor(e.target.value)} />\n                    <AddIcon style={{color: 'green'}} className={classes.icon} onClick={() => {handleAdd(newAuthor, 'authors'); setNewAuthor('')}} />\n                </div>)}\n\n                {exists(post.visits) && (<div>\n                    <TextField className={classes.input_long} label=\"Views\" type=\"number\" value={post.visits} onChange={e => handleInput(e, 'visits')} />\n                </div>)}\n\n                {exists(post.content) && (<div>\n                    <TextField className={classes.textarea} multiline={true} label=\"Content\" value={post.content || ''} onChange={e => handleInput(e, 'content')} />\n                </div>)}\n\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleDelete}>Delete</Button>\n                <Button className={classes.button}  variant=\"contained\" onClick={() => {setIsOpen(true);window.scrollTo(0,0)}}>Preview</Button>\n                <Button className={classes.button}  variant=\"contained\" color=\"secondary\" onClick={handleReset}>Reset</Button>\n\n                <Typography>\n                    {status}\n                </Typography>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react'\nimport Navigation from '../components/Navigation'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function NotFoundPage({ history }) {\n\n    useEffect(() => {\n        setTimeout(() => {\n            history.push('/')\n        }, 1500)\n    }, [history])\n\n    return (\n        <>\n            <Navigation name=\"Error 404\" />\n            <Typography style={{ textAlign: 'center', margin: '20px' }} variant=\"h4\">\n                The page that you were looking for does not exist. Redirecting you to the home page...\n            </Typography>\n        </>\n    )\n}\n","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    });\n    return () => {\n      unlisten()\n    }\n  }, [])\n\n  return (null)\n}\n\nexport default withRouter(ScrollToTop)","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport PostsPage from './pages/PostsPage'\nimport AddAuthorPage from './pages/AddAuthorPage'\nimport AuthorsPage from './pages/AuthorsPage'\nimport AddPostPage from './pages/AddPostPage'\nimport PostPage from './pages/PostPage'\nimport AuthorPage from './pages/AuthorPage'\nimport NotFoundPage from './pages/NotFoundPage'\nimport ScrollToTop from './ScrollToTop'\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/posts/add\" exact component={AddPostPage} />\n          <Route path=\"/posts\" exact component={PostsPage} />\n          <Route path=\"/authors/add\" exact component={AddAuthorPage} />\n          <Route path=\"/authors\" exact component={AuthorsPage} />\n          <Route path=\"/post/:id\" exact component={PostPage} />\n          <Route path=\"/author/:id\" exact component={AuthorPage} />\n          <Route path=\"/\" component={NotFoundPage} />\n        </Switch> \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './main.css'\nimport './override.css'\nimport { CookiesProvider } from \"react-cookie\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useEffect } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    div: {\n        textAlign: 'center',\n        margin: '15px 0 15px 0'\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        '&:hover': {\n            color: 'purple'\n        }\n    }\n})\n\nexport default function Warning() {\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n    }, [])\n\n    const classes = useStyles()\n\n    return (\n        <div className={classes.div}>\n            <Typography variant=\"h5\">\n                WARNING: You are not logged in! Click <span onClick={() => {window.location.reload()}} className={classes.link}>here</span> to log in again.\n            </Typography>\n        </div>\n    )\n}\n"],"sourceRoot":""}